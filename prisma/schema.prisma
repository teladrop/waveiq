// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  roleId        String?
  role          Role?       @relation(fields: [roleId], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  thumbnails    Thumbnail[]
  courses       Course[]
  subscriptions Subscription[]
  contents      Content[]
  keywords      Keyword[]
  competitors   Competitor[]
  shorts        Short[]
}

model Thumbnail {
  id              String    @id @default(cuid())
  userId          String
  prompt          String
  negativePrompt  String?
  imageUrl        String
  width           Int
  height          Int
  createdAt       DateTime  @default(now())
  user            User      @relation(fields: [userId], references: [id])
}

model Course {
  id          String    @id @default(cuid())
  title       String
  videoLink   String
  description String
  category    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String
  user        User      @relation(fields: [userId], references: [id])
}

model Role {
  id          String   @id @default(cuid())
  name        String   @unique
  permissions String   // Store JSON as string for SQLite
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]
}

model Subscription {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  plan      String
  status    String
  startDate DateTime
  endDate   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tool {
  id          String   @id @default(cuid())
  name        String
  description String?
  apiKey      String?
  enabled     Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Content {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  title     String
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Keyword {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  keyword   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Competitor {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  name      String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Short {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  title     String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Add more models as needed 